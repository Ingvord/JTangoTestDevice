<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

	<!-- DATASOURCE DEFINITION VVVVVVV-->
	<bean id="dataSource"
        class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close"> 
			<property name="initialSize" value="2"/>
		    <property name="maxActive" value="5"/>
		    <property name="maxIdle" value="2"/>

		    <property name="driverClassName" value="@DRIVER_CLASS_NAME@" />
		    <property name="url" value="@URL@" />
		    <property name="username" value="@USERNAME@" />
		    <property name="password" value="@PASSWORD@" />
	</bean>
  	<!-- DATASOURCE DEFINITION ^^^^^^-->
	
	<!-- HIBERNATE DEFINITION VVVVVVV-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
	
		<property name="mappingResources">
		  <list>
			  <value>valueTables.hbm.xml</value>
		  </list>
		</property>

    	<property name="hibernateProperties">
		  <value>
			hibernate.dialect=@HIBERNATE_DIALECT@
			hibernate.show_sql=true
			hibernate.format_sql=true
			hibernate.transaction.factory_class=org.hibernate.transaction.JDBCTransactionFactory
			hibernate.current_session_context_class=thread
			hibernate.connection.autocommit=false
			hibernate.generate_statistics=true
		  </value>
		</property>
    </bean>
    <!-- HIBERNATE DEFINITION ^^^^^^-->
  
    <!-- TRANSACTIONS DEFINITIONS VVVVVVV-->
		<!-- MANAGER -->
		<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
			<property name="sessionFactory" ref="sessionFactory"/>
		</bean>
	
		<!-- DEFINES AN "ADVICE" IE. A WAY TO USE THE TRANSACTION MANAGER AROUND METHODS -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager"><!-- the transactional advice (i.e. what 'happens'; see the <aop:advisor/> bean below) -->	  
			<tx:attributes><!-- the transactional semantics... -->
				<tx:method name="findBy*" read-only="true"/><!-- all methods starting with 'get' are read-only -->
				<tx:method name="*"/><!-- other methods use the default transaction settings (see below) -->
			</tx:attributes>
		</tx:advice>
	
    	<!-- DEFINES WHERE "ADVICES" WILL BE USED-->
		<aop:config><!-- ensure that the above transactional advice runs for any execution of an operation defined by the FooService interface -->
			<aop:pointcut id="valDAOOperation" expression="execution(* fr.soleil.TangoSnapshoting.SnapshotingApi.persistence.spring.dao.ValDAO.*(..))"/>
			<aop:advisor advice-ref="txAdvice" pointcut-ref="valDAOOperation"/>
		</aop:config>
    <!-- TRANSACTIONS DEFINITIONS ^^^^^^-->
  
	<!-- DAO BEANS DEFINITION VVVVVVV-->
    <bean id="scNum1ValDAO" class="fr.soleil.TangoSnapshoting.SnapshotingApi.persistence.spring.dao.ScNum1ValDAOImpl">
		<constructor-arg ref="sessionFactory" /> 
    </bean>
  
    <bean id="scNum2ValDAO" class="fr.soleil.TangoSnapshoting.SnapshotingApi.persistence.spring.dao.ScNum2ValDAOImpl">
		<constructor-arg ref="sessionFactory" /> 
    </bean>
  
    <bean id="scStr1ValDAO" class="fr.soleil.TangoSnapshoting.SnapshotingApi.persistence.spring.dao.ScStr1ValDAOImpl">
		<constructor-arg ref="sessionFactory" /> 
    </bean>
  
    <bean id="scStr2ValDAO" class="fr.soleil.TangoSnapshoting.SnapshotingApi.persistence.spring.dao.ScStr2ValDAOImpl">
		<constructor-arg ref="sessionFactory" /> 
    </bean>
  
    <bean id="sp1ValDAO" class="fr.soleil.TangoSnapshoting.SnapshotingApi.persistence.spring.dao.Sp1ValDAOImpl">
		<constructor-arg ref="sessionFactory" /> 
    </bean>
  
    <bean id="sp2ValDAO" class="fr.soleil.TangoSnapshoting.SnapshotingApi.persistence.spring.dao.Sp2ValDAOImpl">
		<constructor-arg ref="sessionFactory" /> 
    </bean>
  
    <bean id="im1ValDAO" class="fr.soleil.TangoSnapshoting.SnapshotingApi.persistence.spring.dao.Im1ValDAOImpl">
		<constructor-arg ref="sessionFactory" /> 
    </bean>
  
    <bean id="im2ValDAO" class="fr.soleil.TangoSnapshoting.SnapshotingApi.persistence.spring.dao.Im2ValDAOImpl">
		<constructor-arg ref="sessionFactory" /> 
    </bean>
	<!-- DAO BEANS DEFINITION ^^^^^^-->
</beans>